import turtle
import random
import time
speed = 1

screen = turtle.Screen()
screen.bgcolor('lightgreen')
screen.tracer(2)


myPen = turtle.Turtle()
myPen.speed(0)
myPen.penup()
myPen.setposition(-300, -300)
myPen.pendown()
myPen.pensize(3)
for i in range(4):
    myPen.forward(600)
    myPen.left(90)
myPen.hideturtle()



 

player = turtle.Turtle()
player.shape('triangle')
player.color('blue')
player.penup()

# //
goals = []
goalCount = 6
for i in range(goalCount):
    goals.append(turtle.Turtle())
    goals[i].shape('circle')
    goals[i].color('red')
    goals[i].speed(200)
    goals[i].penup()
    goals[i].setposition(random.randint(-250, 250), random.randint(-250, 250))


speed = 1 
score= 0


  

def Left():
    player.left(30)

def Right():
    player.right(30)

def Up():
    global speed
    speed += 1
def Down():
    global speed
    speed -= 1

turtle.listen()
turtle.onkey(Left, 'Left')
turtle.onkey(Right, 'Right')
turtle.onkey(Up, 'Up')
turtle.onkey(Down, 'Down')


while True:
    player.forward(speed)


    if player.xcor() > 300 or player.xcor() < -300:
        player.right(180)

    if player.ycor() > 300 or player.ycor() < -300:
        player.right(180)

    for i in range(goalCount):

        if player.distance(goals[i]) < 20:
            goals[i].setposition(random.randint(-280, 280), random.randint(-280, 280))
            goals[i].right(random.randint(-90, 90))

            myPen.undo()
            myPen.penup()
            myPen.hideturtle()
            myPen.setposition(-290, 310)
            scoreString = 'Score: %s' % score
            myPen.write(scoreString, False, align='left', font=('Arial', 14, 'normal'))
            score += 1

        if score >= 3:
            myPen.setposition(-50, 0)
            myPen.write("Clear!", False, align='left', font=('Arial', 24, 'bold'))
            time.sleep(5)
            screen.bye()
            break



        goals[i].forward(3)
        if goals[i].xcor() > 300 or goals[i].xcor() < -300:
            goals[i].right(180)

        if goals[i].ycor() > 300 or goals[i].ycor() < -300:
            goals[i].right(180)








screen.mainloop()
